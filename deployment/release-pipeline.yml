# Azure DevOps Pipeline for Delphi ISAPI Migration
# This pipeline automates the build, test, and deployment process

name: ISAPI-Migration-$(Date:yyyyMMdd)-$(Rev:r)

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - docs/*
      - README.md

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - docs/*
      - README.md

variables:
  azureServiceConnection: 'Azure-Service-Connection'
  resourceGroupName: 'rg-isapi-migration'
  appServiceName: 'isapi-migration-app'
  location: 'East US'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    pool:
      vmImage: 'windows-2022'
    
    steps:
    - task: PowerShell@2
      displayName: 'Validate PowerShell Scripts'
      inputs:
        targetType: 'inline'
        script: |
          # Install PSScriptAnalyzer
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
          
          # Analyze all PowerShell scripts
          $scripts = Get-ChildItem -Path "$(Build.SourcesDirectory)" -Filter "*.ps1" -Recurse
          foreach ($script in $scripts) {
            Write-Host "Analyzing: $($script.FullName)"
            $results = Invoke-ScriptAnalyzer -Path $script.FullName
            if ($results) {
              Write-Warning "Issues found in $($script.Name):"
              $results | ForEach-Object { Write-Warning "$($_.Message)" }
            }
          }

    - task: AzureCLI@2
      displayName: 'Validate Bicep Templates'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Validate main Bicep template
          az bicep build --file infrastructure/bicep/main.bicep
          
          # Validate module templates
          $modules = Get-ChildItem -Path "infrastructure/bicep/modules" -Filter "*.bicep"
          foreach ($module in $modules) {
            Write-Host "Validating: $($module.Name)"
            az bicep build --file $module.FullName
          }

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        pathToPublish: '$(Build.SourcesDirectory)'
        artifactName: 'isapi-migration-toolkit'

- stage: Deploy_Test
  displayName: 'Deploy to Test Environment'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployTest
    displayName: 'Deploy to Test'
    pool:
      vmImage: 'windows-2022'
    environment: 'Test'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: 'isapi-migration-toolkit'

          - task: AzureCLI@2
            displayName: 'Deploy Infrastructure'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Deploy Bicep template
                az deployment group create `
                  --resource-group "$(resourceGroupName)-test" `
                  --template-file "$(Pipeline.Workspace)/isapi-migration-toolkit/infrastructure/bicep/main.bicep" `
                  --parameters appName="$(appServiceName)-test" location="$(location)"

          - task: PowerShell@2
            displayName: 'Run Integration Tests'
            inputs:
              targetType: 'inline'
              script: |
                # Run basic connectivity tests
                $testUrl = "https://$(appServiceName)-test.azurewebsites.net"
                try {
                  $response = Invoke-WebRequest -Uri $testUrl -UseBasicParsing
                  Write-Host "Test environment is accessible: $($response.StatusCode)"
                } catch {
                  Write-Error "Test environment is not accessible: $_"
                  exit 1
                }

- stage: Deploy_Production
  displayName: 'Deploy to Production'
  dependsOn: Deploy_Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployProduction
    displayName: 'Deploy to Production'
    pool:
      vmImage: 'windows-2022'
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: 'isapi-migration-toolkit'

          - task: AzureCLI@2
            displayName: 'Deploy Production Infrastructure'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Deploy Bicep template
                az deployment group create `
                  --resource-group "$(resourceGroupName)" `
                  --template-file "$(Pipeline.Workspace)/isapi-migration-toolkit/infrastructure/bicep/main.bicep" `
                  --parameters appName="$(appServiceName)" location="$(location)"

          - task: PowerShell@2
            displayName: 'Run Production Validation'
            inputs:
              targetType: 'inline'
              script: |
                # Validate production deployment
                $prodUrl = "https://$(appServiceName).azurewebsites.net"
                try {
                  $response = Invoke-WebRequest -Uri $prodUrl -UseBasicParsing
                  Write-Host "Production environment is accessible: $($response.StatusCode)"
                } catch {
                  Write-Error "Production environment is not accessible: $_"
                  exit 1
                }
